<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="restoreObject" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="objectName" description="Name of the object to be restored."/>
    <parameter name="bucketUrl" description="End point URL of the request."/>
    <parameter name="numberOfDays" description="Lifetime of the restored (active) copy."/>
    <parameter name="accessControlList" description="Container for ACL information."/>
    <parameter name="versionId" description="Version Id of an object to restore a specific object version."/>
    <sequence>
        <property name="uri.var.objectName" expression="$func:objectName"/>
        <property name="uri.var.bucketUrl" expression="$func:bucketUrl"/>
        <property name="uri.var.numberOfDays" expression="$func:numberOfDays"/>
        <property name="uri.var.versionId" expression="$func:versionId"/>
        <property name="uri.var.uriRemainder" expression="fn:concat('/',get-property('uri.var.objectName'),'?restore')"/>
        <!-- Setting the ACL of a specified object version -->
        <filter xpath="(string(get-property('uri.var.versionId'))) and get-property('uri.var.versionId') != ''">
            <then>
                <property name="uri.var.uriRemainder"
                          expression="fn:concat(get-property('uri.var.uriRemainder'),'&amp;versionId=',get-property('uri.var.versionId'))"/>
            </then>
        </filter>
        <!-- Authentication Header Setup -->
        <class name="org.wso2.carbon.connector.amazons3.auth.AmazonS3AuthConnector"/>
        <filter xpath="(string(get-property('date'))) and get-property('date') != ''">
            <then>
                <property name="Date" expression="get-property('date')" scope="transport" type="STRING"/>
            </then>
        </filter>
        <filter xpath="(string(get-property('isXAmzDateValue'))) and get-property('isXAmzDateValue') != ''">
            <then>
                <property name="x-amz-date" expression="get-property('isXAmzDateValue')" scope="transport"
                          type="STRING"/>
            </then>
        </filter>
        <filter xpath="(string(get-property('authenticationCode'))) and get-property('authenticationCode') != ''">
            <then>
                <property name="Authorization" expression="get-property('authenticationCode')" scope="transport"
                          type="STRING"/>
            </then>
        </filter>
        <filter xpath="(string(get-property('contentMD5'))) or get-property('contentMD5') != ''">
            <then>
                <property name="Content-MD5" expression="get-property('contentMD5')"
                          scope="transport" type="STRING"/>
            </then>
        </filter>
        <payloadFactory media-type="xml">
            <format>
                <RestoreRequest>
                    <Days>$1</Days>
                </RestoreRequest>
            </format>
            <args>
                <arg expression="get-property('uri.var.numberOfDays')"/>
            </args>
        </payloadFactory>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.bucketUrl}{+uri.var.uriRemainder}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-amz-id-2" scope="transport" action="remove"/>
        <header name="x-amz-request-id" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
    </sequence>
</template>