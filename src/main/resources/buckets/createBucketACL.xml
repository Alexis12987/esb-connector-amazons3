<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="createBucketACL" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="bucketUrl" description="End point URL of the request."/>
    <parameter name="ownerId" description="ID of the bucket owner."/>
    <parameter name="ownerDisplayName" description="Screen name of the bucket owner."/>
    <parameter name="accessControlList" description="Container for ACL information."/>
    <sequence>
        <property name="uri.var.bucketUrl" expression="$func:bucketUrl"/>
        <property name="uri.var.ownerId" expression="$func:ownerId"/>
        <property name="uri.var.ownerDisplayName" expression="$func:ownerDisplayName"/>
        <property name="uri.var.accessControlList" expression="$func:accessControlList"/>
        <property name="uri.var.uriRemainder" value="/?acl"/>
        <!-- Authentication Header Setup -->
        <class name="org.wso2.carbon.connector.amazons3.auth.AmazonS3AuthConnector"/>
        <filter xpath="string($ctx:date) and $ctx:date != ''">
            <then>
                <property name="Date" expression="$ctx:date" scope="transport" type="STRING"/>
            </then>
        </filter>
        <filter xpath="string($ctx:isXAmzDateValue) and $ctx:isXAmzDateValue != ''">
            <then>
                <property name="x-amz-date" expression="$ctx:isXAmzDateValue')" scope="transport" type="STRING"/>
            </then>
        </filter>
        <filter xpath="string($ctx:authenticationCode) and $ctx:authenticationCode != ''">
            <then>
                <property name="Authorization" expression="$ctx:authenticationCode" scope="transport" type="STRING"/>
            </then>
        </filter>
        <payloadFactory media-type="xml">
            <format>
                <AccessControlPolicy>
                    <Owner>
                        <ID>$1</ID>
                        <DisplayName>$2</DisplayName>
                    </Owner>
                    <AccessControlList>$ctx:uri.var.accessControlList</AccessControlList>
                </AccessControlPolicy>
            </format>
            <args>
                <arg expression="$ctx:uri.var.ownerId"/>
                <arg expression="$ctx:uri.var.ownerDisplayName"/>
            </args>
        </payloadFactory>
        <call>
            <endpoint>
                <http method="put" uri-template="{uri.var.bucketUrl}{+uri.var.uriRemainder}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-amz-id-2" scope="transport" action="remove"/>
        <header name="x-amz-request-id" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
    </sequence>
</template>